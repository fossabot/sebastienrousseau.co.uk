{ "version": "https://jsonfeed.org/version/1", "title": "Feed", "home_page_url": "https://sebastienrousseau.co.uk/", "feed_url": "https://sebastienrousseau.co.uk/feed.json", "description": "Sebastien Rousseau is the founder and CEO of Reedia Limited - a Blockchain, Banking & Financial Services development consultancy based in London, UK.", "icon": "https://sebastienrousseau.co.uk/assets/images/apple-touch-icon.png", "favicon": "https://sebastienrousseau.co.uk/assets/images/apple-touch-icon.png", "author": { "name": "" }, "expired": false, "items": [ { "id": "https://sebastienrousseau.co.uk/the-making-of-the-express-transaction-credits-platform", "url": "https://sebastienrousseau.co.uk/the-making-of-the-express-transaction-credits-platform.html", "title": "The making of the Express Transaction Credits Platform - EXTC", "content_html": "<p><strong>Building a comprehensive framework of the next generation of ERC-223 compliant tokens</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/rawpixel-com-369782-320.jpg 320w, assets/images/rawpixel-com-369782-480.jpg 480w, assets/images/rawpixel-com-369782-576.jpg 576w, assets/images/rawpixel-com-369782-640.jpg 640w, assets/images/rawpixel-com-369782-720.jpg 720w, assets/images/rawpixel-com-369782-768.jpg 768w, assets/images/rawpixel-com-369782-800.jpg 800w, assets/images/rawpixel-com-369782-960.jpg 960w, assets/images/rawpixel-com-369782-1024.jpg 1024w, assets/images/rawpixel-com-369782-1200.jpg 1200w, assets/images/rawpixel-com-369782-1280.jpg 1280w, assets/images/rawpixel-com-369782-1366.jpg 1366w,assets/images/rawpixel-com-369782-1440.jpg 1440w, assets/images/rawpixel-com-369782-1536.jpg 1536w, assets/images/rawpixel-com-369782-1600.jpg 1600w, assets/images/rawpixel-com-369782-1920.jpg 1920w\" src=\"assets/images/rawpixel-com-369782-1920.jpg\" alt=\"The ERC-223 Token Standard Banner\"/></p>\n\n<h2 id=\"abstract\">Abstract</h2>\n\n<p>In this article, we’ll be looking at building our decentralised exchange structured around the <strong><a href=\"https://github.com/Dexaran/ERC223-token-standard\">ERC223</a></strong> standard - a superset of the ERC20 token standard compliant with the proposed <strong>ERC223 EIP</strong> standard interfaces for Tokens and APIs within smart contracts and part of the <strong><a href=\"https://www.ethereum.org/\">Ethereum</a></strong> blockchain technology stack.</p>\n\n<h2 id=\"basics\">Basics</h2>\n\n<p>The name we have chosen for our token is <strong><a href=\"/future-faster-payment-solutions.html\">EXTC (Express Transaction Credits)</a></strong> with a vision to achieve a brand new suite of financial services facilitating and guaranteeing instant loans, lighting-fast payments and swifter deposits between participants.</p>\n\n<p>Let’s get started on the premise that:</p>\n\n<ul class=\"disc\">\n <li>\n <p>EXTC is an Ethereum based ERC223 and ERC223 EIP compliant token/smart-contract</p>\n </li>\n <li>\n <p>The Express Transaction Credits services will support traditional fiat currencies, cryptocurrencies and compliant tokens through a set of smart contracts</p>\n </li>\n <li>\n <p>The smart contracts are written in <strong><a href=\"https://solidity.readthedocs.io/en/develop/\">Solidity</a></strong></p>\n </li>\n <li>\n <p>We will use <strong><a href=\"http://truffleframework.com/\">Truffle</a></strong> - a framework for creating smart contracts and decentralised applications - to test and deploy</p>\n </li>\n <li>\n <p>We will use <strong><a href=\"http://truffleframework.com/ganache/\">Ganache</a></strong> as the development environment, testing framework and asset pipeline, part of the Truffle suite of Ethereum development tools.</p>\n </li>\n <li>\n <p><strong><a href=\"https://metamask.io/\">Metamask</a></strong> to make transactions on Ethereum through <strong><a href=\"https://www.google.co.uk/chrome\">Chrome</a></strong> on the <strong><a href=\"https://ropsten.etherscan.io/\">Ropsten</a></strong> Testnet Ethereum BlockChain Explorer and Search</p>\n </li>\n</ul>\n\n<h2 id=\"requirements\">Requirements</h2>\n\n<ul class=\"disc\">\n <li><a href=\"https://nodejs.org/en/\">NodeJS</a> 6.11.5+ recommended</li>\n <li><a href=\"https://yarnpkg.com/en/\">Yarn</a> 1.3.2+ recommended</li>\n <li>Mac OS X, Linux or Windows</li>\n</ul>\n\n<h2 id=\"installation\">Installation</h2>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Install the Truffle package globally</span>\n<span class=\"nv\">$ </span>npm <span class=\"nb\">install</span> <span class=\"nt\">-g</span> truffle\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Install local node dependencies, using the npm command:</span>\n<span class=\"nv\">$ </span>npm <span class=\"nb\">install</span>\n</code></pre></div></div>\n<p>or</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Install local node dependencies, using the yarn command:</span>\n<span class=\"nv\">$ </span>yarn\n</code></pre></div></div>\n\n<h3 id=\"initialising-the-token\">Initialising the Token</h3>\n\n<p>The first step is to create a token contract file.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">touch </span>contracts/ExtcToken.sol\n</code></pre></div></div>\n\n<h3 id=\"defining-the-token-parameters\">Defining the Token parameters</h3>\n\n<p>To create an ERC223 contract, you will also need to define the following values:</p>\n\n<ul class=\"disc\">\n <li>The Token’s Name</li>\n <li>The Token’s Symbol</li>\n <li>The Token’s Decimal Places</li>\n <li>The Number of Tokens in Circulation</li>\n</ul>\n\n<p>This will result to a similar declaration:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tstring public name    <span class=\"o\">=</span> “Token”<span class=\"p\">;</span>\n \tstring public symbol  <span class=\"o\">=</span> “EXTC”<span class=\"p\">;</span>\n \tuint8 public decimals <span class=\"o\">=</span> 18<span class=\"p\">;</span>\n \tuint256 public totalSupply<span class=\"p\">;</span>\n</code></pre></div></div>\n\n<p>The following describes the standard functions and methods of the Express Transaction Credits contract.</p>\n\n<ul>\n <li><strong>name</strong> of the token (e.g Express Transaction Credits) -typically a string</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  // Function to access name of token <span class=\"nb\">.</span>\n  <span class=\"k\">function </span>name<span class=\"o\">()</span> constant returns <span class=\"o\">(</span>string _name<span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">return </span>name<span class=\"p\">;</span>\n  <span class=\"o\">}</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>symbol</strong> of the token (EXTC) - represented as an uint8</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  // Function to access symbol of token <span class=\"nb\">.</span>\n  <span class=\"k\">function </span>symbol<span class=\"o\">()</span> constant returns <span class=\"o\">(</span>string _symbol<span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">return </span>symbol<span class=\"p\">;</span>\n  <span class=\"o\">}</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>decimals</strong> the decimal values of the token - a unassigned Integer representing the number of digits that come after the decimal place. (e.g 18)</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>// Function to access decimals of token <span class=\"nb\">.</span>\n  <span class=\"k\">function </span>decimals<span class=\"o\">()</span> constant returns <span class=\"o\">(</span>uint8 _decimals<span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">return </span>decimals<span class=\"p\">;</span>\n  <span class=\"o\">}</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>totalSupply</strong> of the token equals the sum of all balances</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  // Function to access total supply of tokens <span class=\"nb\">.</span>\n  <span class=\"k\">function </span>totalSupply<span class=\"o\">()</span> constant returns <span class=\"o\">(</span>uint256 _totalSupply<span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">return </span>totalSupply<span class=\"p\">;</span>\n  <span class=\"o\">}</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>balanceOf</strong> Returns the account balance of another account with address _owner</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function </span>balanceOf<span class=\"o\">(</span>address _owner<span class=\"o\">)</span> constant returns <span class=\"o\">(</span>uint256 balance<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>transfer(address, uint)</strong> Transfer the specified amount of tokens to the specified address. Needed due to backwards compatibility reasons with ERC20.</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function </span>transfer<span class=\"o\">(</span>address _to, uint _value<span class=\"o\">)</span> returns <span class=\"o\">(</span>bool<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<ul>\n <li><strong>transfer(address, uint, bytes)</strong> Transfer the specified amount of tokens to the specified address.</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function </span>transfer<span class=\"o\">(</span>address _to, uint _value, bytes _data<span class=\"o\">)</span> returns <span class=\"o\">(</span>bool<span class=\"o\">)</span>\n</code></pre></div></div>\n\n<h3 id=\"standard-erc-223-token-functions\">Standard ERC-223 token functions</h3>\n\n<p>EXTC tokens by design are moving towards the Ethereum’s Improvement Proposal 223 (ERC223 EIP) Standard for ERC223 token and the standard API for tokens within smart contracts.</p>\n\n<ul class=\"disc\">\n <li>\n <p><strong>contract ExtcToken is ERC223Interface</strong> - Reference implementation of the ERC223 EXTC token</p>\n </li>\n <li>\n <p><strong>function ExtcToken</strong> - Assigns the totalSupply to the contract.</p>\n </li>\n <li>\n <p><strong>function balanceOf(address _owner)</strong> Gets the balance of the specified address. Returns an uint256 representing the amount owned by the passed address.</p>\n </li>\n <li>\n <p><strong>function allowance(address _owner, address _spender)</strong> - displays the amount of remaining tokens allowed to spent</p>\n </li>\n</ul>\n\n\n <p><a href=\"https://sebastienrousseau.co.uk/the-making-of-the-express-transaction-credits-platform.html\" rel=\"nofollow\">The making of the Express Transaction Credits Platform - EXTC</a> was originally published on Sebastien Rousseau.</p>", "content_text": "Building a comprehensive framework of the next generation of ERC-223 compliant tokens Abstract In this article, we’ll be looking at building our decentralised exchange structured around the ERC223 standard - a superset of the ERC20 token standard compliant with the proposed ERC223 EIP standard interfaces for Tokens and APIs within smart contracts and part of the Ethereum blockchain technology stack. Basics The name we have chosen for our token is EXTC (Express Transaction Credits) with a vision to achieve a brand new suite of financial services facilitating and guaranteeing instant loans, lighting-fast payments and swifter deposits between participants. Let’s get started on the premise that: EXTC is an Ethereum based ERC223 and ERC223 EIP compliant token/smart-contract The Express Transaction Credits services will support traditional fiat currencies, cryptocurrencies and compliant tokens through a set of smart contracts The smart contracts are written in Solidity We will use Truffle - a framework for creating smart contracts and decentralised applications - to test and deploy We will use Ganache as the development environment, testing framework and asset pipeline, part of the Truffle suite of Ethereum development tools. Metamask to make transactions on Ethereum through Chrome on the Ropsten Testnet Ethereum BlockChain Explorer and Search Requirements NodeJS 6.11.5+ recommended Yarn 1.3.2+ recommended Mac OS X, Linux or Windows Installation # Install the Truffle package globally $ npm install -g truffle # Install local node dependencies, using the npm command: $ npm install or # Install local node dependencies, using the yarn command: $ yarn Initialising the Token The first step is to create a token contract file. touch contracts/ExtcToken.sol Defining the Token parameters To create an ERC223 contract, you will also need to define the following values: The Token’s Name The Token’s Symbol The Token’s Decimal Places The Number of Tokens in Circulation This will result to a similar declaration: string public name = “Token”; string public symbol = “EXTC”; uint8 public decimals = 18; uint256 public totalSupply; The following describes the standard functions and methods of the Express Transaction Credits contract. name of the token (e.g Express Transaction Credits) -typically a string // Function to access name of token . function name() constant returns (string _name) { return name; } symbol of the token (EXTC) - represented as an uint8 // Function to access symbol of token . function symbol() constant returns (string _symbol) { return symbol; } decimals the decimal values of the token - a unassigned Integer representing the number of digits that come after the decimal place. (e.g 18) // Function to access decimals of token . function decimals() constant returns (uint8 _decimals) { return decimals; } totalSupply of the token equals the sum of all balances // Function to access total supply of tokens . function totalSupply() constant returns (uint256 _totalSupply) { return totalSupply; } balanceOf Returns the account balance of another account with address _owner function balanceOf(address _owner) constant returns (uint256 balance) transfer(address, uint) Transfer the specified amount of tokens to the specified address. Needed due to backwards compatibility reasons with ERC20. function transfer(address _to, uint _value) returns (bool) transfer(address, uint, bytes) Transfer the specified amount of tokens to the specified address. function transfer(address _to, uint _value, bytes _data) returns (bool) Standard ERC-223 token functions EXTC tokens by design are moving towards the Ethereum’s Improvement Proposal 223 (ERC223 EIP) Standard for ERC223 token and the standard API for tokens within smart contracts. contract ExtcToken is ERC223Interface - Reference implementation of the ERC223 EXTC token function ExtcToken - Assigns the totalSupply to the contract. function balanceOf(address _owner) Gets the balance of the specified address. Returns an uint256 representing the amount owned by the passed address. function allowance(address _owner, address _spender) - displays the amount of remaining tokens allowed to spent" , "summary": "Building a comprehensive framework of the next generation of ERC-223 compliant tokens" , "tags": ["blockchain","credits","cryptocurrencies","distributed","eip","erc20","erc223","ethereum","extc","extc-network","extc-token","faster","financial","ganache","metamask","payment","ropsten","services","smart-contracts","solidity","standard","test","token","tokens","transaction","transfer","truffle"] , "date_published": "2018-02-15T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } }, { "id": "https://sebastienrousseau.co.uk/future-faster-payment-solutions", "url": "https://sebastienrousseau.co.uk/future-faster-payment-solutions.html", "title": "Unveiling a new Cryptocurrency and offering Future Faster Payment Solution", "content_html": "<p><strong>Faster Payments technology is still in its nascency and the need for real-time technology is critical</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/business-2089534-320.jpg 320w, assets/images/business-2089534-480.jpg 480w, assets/images/business-2089534-576.jpg 576w, assets/images/business-2089534-640.jpg 640w, assets/images/business-2089534-720.jpg 720w, assets/images/business-2089534-768.jpg 768w, assets/images/business-2089534-800.jpg 800w, assets/images/business-2089534-960.jpg 960w, assets/images/business-2089534-1024.jpg 1024w, assets/images/business-2089534-1200.jpg 1200w, assets/images/business-2089534-1280.jpg 1280w, assets/images/business-2089534-1366.jpg 1366w,assets/images/business-2089534-1440.jpg 1440w, assets/images/business-2089534-1536.jpg 1536w, assets/images/business-2089534-1600.jpg 1600w, assets/images/business-2089534-1920.jpg 1920w\" src=\"assets/images/business-2089534-1920.jpg\" alt=\"The ERC-20 Token Standard Banner\"/></p>\n\n<p>In this article, we’ll be looking at building a decentralised exchange based on the <strong>ERC-20</strong> and API standards for tokens within smart contracts as part of the Ethereum blockchain technology.</p>\n\n<h1 id=\"extc-network\">EXTC Network</h1>\n\n<p>EXTC Network will become a new a decentralised exchange that allows delivery of financial services via a distributed ledger, self-executing smart contracts, and cryptocurrency.</p>\n\n<h2 id=\"create-a-standard-for-faster-payment-and-high-execution-speed-transactions\">Create a standard for faster payment and high execution speed transactions</h2>\n\n<p>Four key elements that are guiding the design and development of our cryptographic currency roadmap are centered towards a <strong>simple concept - the consistent global growth and need for</strong>:</p>\n\n<ol>\n <li><strong>Faster Payment Solutions</strong></li>\n <li><strong>Distributed</strong>, highly secured, trustworthy and resilient <strong>networks</strong> to support the concept,</li>\n <li>Balancing the <strong>transition between</strong> new transaction <strong>model</strong> and legacy fiat one.</li>\n <li>Accessible, <strong>compliant services and regulated practices and commitments</strong> over securities issuance</li>\n</ol>\n\n<h2 id=\"concept-development\">Concept development</h2>\n\n<p>The name chosen for the token is <strong>EXTC (Express Transaction Credits)</strong>.</p>\n\n<p>The vision is to achieve a brand new suite of financial services to facilitate and guarantee instant loans, lighting-fast payments and deposits between participants with enhanced transparency of transactions that offers users a well suited platform regardless of their financial standing.</p>\n\n<p>All services will support traditional fiat currencies, cryptocurrencies and compliant tokens.</p>\n\n<p>EXTC tokens will be built and issued as <strong>EIP20</strong> compliant for the Ethereum blockchains, underpinned by an incredibly secure and stable platform ensuring that each P2P node is reputable and not fraudulent.</p>\n\n<h3 id=\"building-the-future\">Building the Future</h3>\n\n<p>Four types of payments will be supported on the blockchain or distributed ledger:</p>\n\n<ul class=\"disc\">\n <li><strong>Single Atomic Payments</strong> - one-off payments</li>\n <li><strong>Time-based Payments</strong> - one-off payments sent and received on a pre-arranged date</li>\n <li><strong>Real-time Standing Orders</strong> - regular payment that pays a fixed amount to the same recipient on regular dates</li>\n <li><strong>Corporate Mass Payments</strong> - bulk files of payment, that can be sent 24 hours a day, seven days a week</li>\n</ul>\n\n <p><a href=\"https://sebastienrousseau.co.uk/future-faster-payment-solutions.html\" rel=\"nofollow\">Unveiling a new Cryptocurrency and offering Future Faster Payment Solution</a> was originally published on Sebastien Rousseau.</p>", "content_text": "Faster Payments technology is still in its nascency and the need for real-time technology is critical In this article, we’ll be looking at building a decentralised exchange based on the ERC-20 and API standards for tokens within smart contracts as part of the Ethereum blockchain technology. EXTC Network EXTC Network will become a new a decentralised exchange that allows delivery of financial services via a distributed ledger, self-executing smart contracts, and cryptocurrency. Create a standard for faster payment and high execution speed transactions Four key elements that are guiding the design and development of our cryptographic currency roadmap are centered towards a simple concept - the consistent global growth and need for: Faster Payment Solutions Distributed, highly secured, trustworthy and resilient networks to support the concept, Balancing the transition between new transaction model and legacy fiat one. Accessible, compliant services and regulated practices and commitments over securities issuance Concept development The name chosen for the token is EXTC (Express Transaction Credits). The vision is to achieve a brand new suite of financial services to facilitate and guarantee instant loans, lighting-fast payments and deposits between participants with enhanced transparency of transactions that offers users a well suited platform regardless of their financial standing. All services will support traditional fiat currencies, cryptocurrencies and compliant tokens. EXTC tokens will be built and issued as EIP20 compliant for the Ethereum blockchains, underpinned by an incredibly secure and stable platform ensuring that each P2P node is reputable and not fraudulent. Building the Future Four types of payments will be supported on the blockchain or distributed ledger: Single Atomic Payments - one-off payments Time-based Payments - one-off payments sent and received on a pre-arranged date Real-time Standing Orders - regular payment that pays a fixed amount to the same recipient on regular dates Corporate Mass Payments - bulk files of payment, that can be sent 24 hours a day, seven days a week" , "summary": "Faster Payments technology is still in its nascency and the need for real-time technology is critical" , "tags": ["blockchain","credits","cryptocurrencies","distributed","eigentrust++","eip20","erc20","ethereum","express","extc","extc-network","faster","fiat","financial","payment","proof-of-importance","services","smart-contracts","solutions","tokens","transaction"] , "date_published": "2018-02-04T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } }, { "id": "https://sebastienrousseau.co.uk/the-erc-20-token-standard", "url": "https://sebastienrousseau.co.uk/the-erc-20-token-standard.html", "title": "The ERC-20 Token Standard", "content_html": "<p><strong>A review of the token application-level standards and conventions within the Ethereum platform</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/hand-2722107-320.jpg 320w, assets/images/hand-2722107-480.jpg 480w, assets/images/hand-2722107-576.jpg 576w, assets/images/hand-2722107-640.jpg 640w, assets/images/hand-2722107-720.jpg 720w, assets/images/hand-2722107-768.jpg 768w, assets/images/hand-2722107-800.jpg 800w, assets/images/hand-2722107-960.jpg 960w, assets/images/hand-2722107-1024.jpg 1024w, assets/images/hand-2722107-1200.jpg 1200w, assets/images/hand-2722107-1280.jpg 1280w, assets/images/hand-2722107-1366.jpg 1366w,assets/images/hand-2722107-1440.jpg 1440w, assets/images/hand-2722107-1536.jpg 1536w, assets/images/hand-2722107-1600.jpg 1600w, assets/images/hand-2722107-1920.jpg 1920w\" src=\"assets/images/hand-2722107-1920.jpg\" alt=\"The ERC-20 Token Standard Banner\"/></p>\n\n<p>As part of the environments prerequisites mentioned in the previous <a href=\"/2018/01/09/understanding-the-technology-behind-blockchain/\">article</a>, we have now installed key tools and utilities that aim to facilitate and enforce strong security measures, coding best practices and community approved standards.</p>\n\n<p>The most popular standards adopted in the creation of an Ethereum-based currency are directly driven from the <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1.md\">Ethereum Improvement Proposal (EIP)</a>, in our case we are focussing today on the token standards (ERC20).</p>\n\n<p>The Ethereum Request for Comments (ERC) are technical specifications that constitute a common list of proposals and rules, application-level standards and conventions, including contract standards such as token standards that a smart-token has to implement for the benefit of consistency, consensus, easier interactions and overall simplicity.</p>\n\n<p>These include a list of common methods and events providing basic functionality as described below:</p>\n\n<h3 id=\"methods\">Methods</h3>\n\n<p>1) <strong>name</strong> - Returns the name of the token.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function name() constant returns (string name)\n</code></pre></div></div>\n\n<p>2) <strong>symbol</strong> - Returns the symbol of the token.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function symbol() constant returns (string symbol)\n</code></pre></div></div>\n\n<p>3) <strong>decimals</strong> - Returns the number of decimals the token uses.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function decimals() constant returns (uint8 decimals)\n</code></pre></div></div>\n\n<p>4) <strong>totalSupply</strong> - Returns the total token supply.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function totalSupply() constant returns (uint256 totalSupply)\n</code></pre></div></div>\n\n<p>5) <strong>balanceOf</strong> - Returns the account balance of another account with address <code class=\"highlighter-rouge\">_owner</code>.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function balanceOf(address _owner) constant returns (uint256 balance)\n</code></pre></div></div>\n\n<p>6) <strong>transfer</strong> - Transfer the balance from owner’s account to another account</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function transfer(address _to, uint256 _value) returns (bool success)\n</code></pre></div></div>\n\n<p>7) <strong>transferFrom</strong> - Send <code class=\"highlighter-rouge\">tokens</code> amount of tokens from address <code class=\"highlighter-rouge\">from</code> to address <code class=\"highlighter-rouge\">to</code></p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function transferFrom(address _from, address _to, uint256 _value) returns (bool success)\n</code></pre></div></div>\n\n<p>8) <strong>approve</strong> - Allow <code class=\"highlighter-rouge\">spender</code> to withdraw from your account, multiple times, up to the <code class=\"highlighter-rouge\">tokens</code> amount.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function approve(address _spender, uint256 _value) returns (bool success)\n</code></pre></div></div>\n\n<p>9) <strong>allowance</strong> - Returns the amount which <code class=\"highlighter-rouge\">_spender</code> is still allowed to withdraw from <code class=\"highlighter-rouge\">_owner</code>.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function allowance(address _owner, address _spender) constant returns (uint256 remaining)\n</code></pre></div></div>\n\n<h3 id=\"events\">Events</h3>\n\n<p>1) <strong>Transfer</strong> - Triggered when tokens are transferred.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>event Transfer(address indexed _from, address indexed _to, uint256 _value)\n</code></pre></div></div>\n\n<p>2) <strong>Approval</strong> - Triggered whenever <code class=\"highlighter-rouge\">approve(address _spender, uint256 _value)</code> is called.</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>event Approval(address indexed _owner, address indexed _spender, uint256 _value)\n</code></pre></div></div>\n\n<p>ERC-20 provides a great starting point to build token contracts and these are written using <a href=\"https://solidity.readthedocs.io/en/develop/\">Solidity</a>.</p>\n\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>pragma solidity ^0.4.16;\n\ninterface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }\n\ncontract TokenERC20 {\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    // 18 decimals is the strongly suggested default, avoid changing it\n    uint256 public totalSupply;\n\n    // This creates an array with all balances\n    mapping (address =&gt; uint256) public balanceOf;\n    mapping (address =&gt; mapping (address =&gt; uint256)) public allowance;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    // This notifies clients about the amount burnt\n    event Burn(address indexed from, uint256 value);\n\n    /**\n     * Constrctor function\n     *\n     * Initializes contract with initial supply tokens to the creator of the contract\n     */\n    function TokenERC20(\n        uint256 initialSupply,\n        string tokenName,\n        string tokenSymbol\n    ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\n    }\n\n    /**\n     * Internal transfer, only can be called by this contract\n     */\n    function _transfer(address _from, address _to, uint _value) internal {\n        // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != 0x0);\n        // Check if the sender has enough\n        require(balanceOf[_from] &gt;= _value);\n        // Check for overflows\n        require(balanceOf[_to] + _value &gt; balanceOf[_to]);\n        // Save this for an assertion in the future\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        // Subtract from the sender\n        balanceOf[_from] -= _value;\n        // Add the same to the recipient\n        balanceOf[_to] += _value;\n        Transfer(_from, _to, _value);\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    /**\n     * Transfer tokens\n     *\n     * Send `_value` tokens to `_to` from your account\n     *\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transfer(address _to, uint256 _value) public {\n        _transfer(msg.sender, _to, _value);\n    }\n\n    /**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` in behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value &lt;= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * Set allowance for other address\n     *\n     * Allows `_spender` to spend no more than `_value` tokens in your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        return true;\n    }\n\n    /**\n     * Set allowance for other address and notify\n     *\n     * Allows `_spender` to spend no more than `_value` tokens in your behalf, and then ping the contract about it\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     * @param _extraData some extra information to send to the approved contract\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\n            return true;\n        }\n    }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] &gt;= _value);   // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        Burn(msg.sender, _value);\n        return true;\n    }\n\n    /**\n     * Destroy tokens from other account\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] &gt;= _value);                // Check if the targeted balance is enough\n        require(_value &lt;= allowance[_from][msg.sender]);    // Check allowance\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        Burn(_from, _value);\n        return true;\n    }\n}\n\n</code></pre></div></div>\n\n <p><a href=\"https://sebastienrousseau.co.uk/the-erc-20-token-standard.html\" rel=\"nofollow\">The ERC-20 Token Standard</a> was originally published on Sebastien Rousseau.</p>", "content_text": "A review of the token application-level standards and conventions within the Ethereum platform As part of the environments prerequisites mentioned in the previous article, we have now installed key tools and utilities that aim to facilitate and enforce strong security measures, coding best practices and community approved standards. The most popular standards adopted in the creation of an Ethereum-based currency are directly driven from the Ethereum Improvement Proposal (EIP), in our case we are focussing today on the token standards (ERC20). The Ethereum Request for Comments (ERC) are technical specifications that constitute a common list of proposals and rules, application-level standards and conventions, including contract standards such as token standards that a smart-token has to implement for the benefit of consistency, consensus, easier interactions and overall simplicity. These include a list of common methods and events providing basic functionality as described below: Methods 1) name - Returns the name of the token. function name() constant returns (string name) 2) symbol - Returns the symbol of the token. function symbol() constant returns (string symbol) 3) decimals - Returns the number of decimals the token uses. function decimals() constant returns (uint8 decimals) 4) totalSupply - Returns the total token supply. function totalSupply() constant returns (uint256 totalSupply) 5) balanceOf - Returns the account balance of another account with address _owner. function balanceOf(address _owner) constant returns (uint256 balance) 6) transfer - Transfer the balance from owner’s account to another account function transfer(address _to, uint256 _value) returns (bool success) 7) transferFrom - Send tokens amount of tokens from address from to address to function transferFrom(address _from, address _to, uint256 _value) returns (bool success) 8) approve - Allow spender to withdraw from your account, multiple times, up to the tokens amount. function approve(address _spender, uint256 _value) returns (bool success) 9) allowance - Returns the amount which _spender is still allowed to withdraw from _owner. function allowance(address _owner, address _spender) constant returns (uint256 remaining) Events 1) Transfer - Triggered when tokens are transferred. event Transfer(address indexed _from, address indexed _to, uint256 _value) 2) Approval - Triggered whenever approve(address _spender, uint256 _value) is called. event Approval(address indexed _owner, address indexed _spender, uint256 _value) ERC-20 provides a great starting point to build token contracts and these are written using Solidity. pragma solidity ^0.4.16; interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; } contract TokenERC20 { // Public variables of the token string public name; string public symbol; uint8 public decimals = 18; // 18 decimals is the strongly suggested default, avoid changing it uint256 public totalSupply; // This creates an array with all balances mapping (address =&gt; uint256) public balanceOf; mapping (address =&gt; mapping (address =&gt; uint256)) public allowance; // This generates a public event on the blockchain that will notify clients event Transfer(address indexed from, address indexed to, uint256 value); // This notifies clients about the amount burnt event Burn(address indexed from, uint256 value); /** * Constrctor function * * Initializes contract with initial supply tokens to the creator of the contract */ function TokenERC20( uint256 initialSupply, string tokenName, string tokenSymbol ) public { totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens name = tokenName; // Set the name for display purposes symbol = tokenSymbol; // Set the symbol for display purposes } /** * Internal transfer, only can be called by this contract */ function _transfer(address _from, address _to, uint _value) internal { // Prevent transfer to 0x0 address. Use burn() instead require(_to != 0x0); // Check if the sender has enough require(balanceOf[_from] &gt;= _value); // Check for overflows require(balanceOf[_to] + _value &gt; balanceOf[_to]); // Save this for an assertion in the future uint previousBalances = balanceOf[_from] + balanceOf[_to]; // Subtract from the sender balanceOf[_from] -= _value; // Add the same to the recipient balanceOf[_to] += _value; Transfer(_from, _to, _value); // Asserts are used to use static analysis to find bugs in your code. They should never fail assert(balanceOf[_from] + balanceOf[_to] == previousBalances); } /** * Transfer tokens * * Send `_value` tokens to `_to` from your account * * @param _to The address of the recipient * @param _value the amount to send */ function transfer(address _to, uint256 _value) public { _transfer(msg.sender, _to, _value); } /** * Transfer tokens from other address * * Send `_value` tokens to `_to` in behalf of `_from` * * @param _from The address of the sender * @param _to The address of the recipient * @param _value the amount to send */ function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) { require(_value &lt;= allowance[_from][msg.sender]); // Check allowance allowance[_from][msg.sender] -= _value; _transfer(_from, _to, _value); return true; } /** * Set allowance for other address * * Allows `_spender` to spend no more than `_value` tokens in your behalf * * @param _spender The address authorized to spend * @param _value the max amount they can spend */ function approve(address _spender, uint256 _value) public returns (bool success) { allowance[msg.sender][_spender] = _value; return true; } /** * Set allowance for other address and notify * * Allows `_spender` to spend no more than `_value` tokens in your behalf, and then ping the contract about it * * @param _spender The address authorized to spend * @param _value the max amount they can spend * @param _extraData some extra information to send to the approved contract */ function approveAndCall(address _spender, uint256 _value, bytes _extraData) public returns (bool success) { tokenRecipient spender = tokenRecipient(_spender); if (approve(_spender, _value)) { spender.receiveApproval(msg.sender, _value, this, _extraData); return true; } } /** * Destroy tokens * * Remove `_value` tokens from the system irreversibly * * @param _value the amount of money to burn */ function burn(uint256 _value) public returns (bool success) { require(balanceOf[msg.sender] &gt;= _value); // Check if the sender has enough balanceOf[msg.sender] -= _value; // Subtract from the sender totalSupply -= _value; // Updates totalSupply Burn(msg.sender, _value); return true; } /** * Destroy tokens from other account * * Remove `_value` tokens from the system irreversibly on behalf of `_from`. * * @param _from the address of the sender * @param _value the amount of money to burn */ function burnFrom(address _from, uint256 _value) public returns (bool success) { require(balanceOf[_from] &gt;= _value); // Check if the targeted balance is enough require(_value &lt;= allowance[_from][msg.sender]); // Check allowance balanceOf[_from] -= _value; // Subtract from the targeted balance allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance totalSupply -= _value; // Update totalSupply Burn(_from, _value); return true; } }" , "summary": "A review of the token application-level standards and conventions within the Ethereum platform" , "tags": ["blockchain","contracts","cryptocurrencies","eip","erc20","ethereum","smart-token","solidity","tokens"] , "date_published": "2018-01-24T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } }, { "id": "https://sebastienrousseau.co.uk/understanding-the-technology-behind-blockchain", "url": "https://sebastienrousseau.co.uk/understanding-the-technology-behind-blockchain.html", "title": "Understanding the Technology behind Blockchain", "content_html": "<p><strong>Exploring how technology is applied in the cryptocurrencies and blockchain space by creating a new coin.</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/bitcoin-3029371-320.jpg 320w, assets/images/bitcoin-3029371-480.jpg 480w, assets/images/bitcoin-3029371-576.jpg 576w, assets/images/bitcoin-3029371-640.jpg 640w, assets/images/bitcoin-3029371-720.jpg 720w, assets/images/bitcoin-3029371-768.jpg 768w, assets/images/bitcoin-3029371-800.jpg 800w, assets/images/bitcoin-3029371-960.jpg 960w, assets/images/bitcoin-3029371-1024.jpg 1024w, assets/images/bitcoin-3029371-1200.jpg 1200w, assets/images/bitcoin-3029371-1280.jpg 1280w, assets/images/bitcoin-3029371-1366.jpg 1366w,assets/images/bitcoin-3029371-1440.jpg 1440w, assets/images/bitcoin-3029371-1536.jpg 1536w, assets/images/bitcoin-3029371-1600.jpg 1600w, assets/images/bitcoin-3029371-1920.jpg 1920w\" src=\"assets/images/bitcoin-3029371-1920.jpg\" alt=\"Blockchain Banner\"/></p>\n\n<p>To give you some background, as I outlined in a <a href=\"/2018/01/02/blockchain-an-extraordinary-journey/\">previous blog</a>, the real breakthrough with Blockchain is its ability to provide the basis for running truly distributed applications that eliminates the need for a central authority validation creating a true peer to peer economy.</p>\n\n<p>Blockchain, is a chronological, public records or ledger of transactions with a super effective cryptographic mechanism assembled on a peer-to-peer network (P2P).</p>\n\n<p>With this in mind, one of the exciting area to explore is how technology is applied in the cryptocurrencies and blockchain space.</p>\n\n<p>In this series of articles, we will take a practical approach and explore how technology is applied in the cryptocurrencies and blockchain space.</p>\n\n<p>Specifically we’ll aim to build a brand new cryptocurrency based on a blockchain implementation called Ethereum and run through understanding the technology.</p>\n\n<h3 id=\"building-ethereum\">Building Ethereum</h3>\n\n<center>\n <img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\"\n assets/images/ethereum-logo-320.jpg 320w,\n assets/images/ethereum-logo-480.jpg 480w,\n assets/images/ethereum-logo-576.jpg 576w,\n assets/images/ethereum-logo-640.jpg 640w,\n assets/images/ethereum-logo-720.jpg 720w,\n assets/images/ethereum-logo-768.jpg 768w,\n assets/images/ethereum-logo-800.jpg 800w,\n assets/images/ethereum-logo-960.jpg 960w,\n assets/images/ethereum-logo-1024.jpg 1024w,\n assets/images/ethereum-logo-1200.jpg 1200w,\n assets/images/ethereum-logo-1280.jpg 1280w,\n assets/images/ethereum-logo-1366.jpg 1366w,assets/images/ethereum-logo-1440.jpg 1440w,\n assets/images/ethereum-logo-1536.jpg 1536w,\n assets/images/ethereum-logo-1600.jpg 1600w,\n assets/images/ethereum-logo-1920.jpg 1920w\" src=\"assets/images/ethereum-logo-1920.jpg\" alt=\"Ethereum Logo\"/>\n</center>\n\n<p>Ethereum is a decentralised platform for applications that run exactly as programmed without any chance of fraud, censorship or third-party interference.</p>\n\n<p>Ethereum is intended to allow developers to create Distributed Applications (ĐApps) using Blockchain technology.</p>\n\n<p>To get started, let’s get a few basic things out of the way.</p>\n\n<ol>\n <li>\n <p>Download <a href=\"https://geth.ethereum.org/downloads/\">Geth</a> (the Official Go implementation of the Ethereum protocol), they have packages for all supported platforms.</p>\n </li>\n <li>\n <p>Install Ethereum. For prerequisites and detailed build instructions please read the <a href=\"https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum\">Installation Instructions</a> on their wiki.</p>\n </li>\n <li>\n <p>Finally, let’s a development environment, testing framework and asset pipeline for Ethereum named. Please follow the <a href=\"http://truffleframework.com/docs/getting_started/installation\">Installation Instructions</a> on their wiki as well.</p>\n </li>\n</ol>\n\n <p><a href=\"https://sebastienrousseau.co.uk/understanding-the-technology-behind-blockchain.html\" rel=\"nofollow\">Understanding the Technology behind Blockchain</a> was originally published on Sebastien Rousseau.</p>", "content_text": "Exploring how technology is applied in the cryptocurrencies and blockchain space by creating a new coin. To give you some background, as I outlined in a previous blog, the real breakthrough with Blockchain is its ability to provide the basis for running truly distributed applications that eliminates the need for a central authority validation creating a true peer to peer economy. Blockchain, is a chronological, public records or ledger of transactions with a super effective cryptographic mechanism assembled on a peer-to-peer network (P2P). With this in mind, one of the exciting area to explore is how technology is applied in the cryptocurrencies and blockchain space. In this series of articles, we will take a practical approach and explore how technology is applied in the cryptocurrencies and blockchain space. Specifically we’ll aim to build a brand new cryptocurrency based on a blockchain implementation called Ethereum and run through understanding the technology. Building Ethereum Ethereum is a decentralised platform for applications that run exactly as programmed without any chance of fraud, censorship or third-party interference. Ethereum is intended to allow developers to create Distributed Applications (ĐApps) using Blockchain technology. To get started, let’s get a few basic things out of the way. Download Geth (the Official Go implementation of the Ethereum protocol), they have packages for all supported platforms. Install Ethereum. For prerequisites and detailed build instructions please read the Installation Instructions on their wiki. Finally, let’s a development environment, testing framework and asset pipeline for Ethereum named. Please follow the Installation Instructions on their wiki as well." , "summary": "Exploring how technology is applied in the cryptocurrencies and blockchain space by creating a new coin." , "tags": ["bitcoin","blockchain","cryptocurrencies","ethereum","ledger","p2p","technology"] , "date_published": "2018-01-09T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } }, { "id": "https://sebastienrousseau.co.uk/blockchain-an-extraordinary-journey", "url": "https://sebastienrousseau.co.uk/blockchain-an-extraordinary-journey.html", "title": "Blockchain, the technology that matters in 2018", "content_html": "<p><strong>A story of the extraordinary journey of securing digital transactions through Private-key Cryptography and Peer-to-peer (P2P) networks.</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/bitcoin-3132717-320.jpg 320w, assets/images/bitcoin-3132717-480.jpg 480w, assets/images/bitcoin-3132717-576.jpg 576w, assets/images/bitcoin-3132717-640.jpg 640w, assets/images/bitcoin-3132717-720.jpg 720w, assets/images/bitcoin-3132717-768.jpg 768w, assets/images/bitcoin-3132717-800.jpg 800w, assets/images/bitcoin-3132717-960.jpg 960w, assets/images/bitcoin-3132717-1024.jpg 1024w, assets/images/bitcoin-3132717-1200.jpg 1200w, assets/images/bitcoin-3132717-1280.jpg 1280w, assets/images/bitcoin-3132717-1366.jpg 1366w,assets/images/bitcoin-3132717-1440.jpg 1440w, assets/images/bitcoin-3132717-1536.jpg 1536w, assets/images/bitcoin-3132717-1600.jpg 1600w, assets/images/bitcoin-3132717-1920.jpg 1920w\" src=\"assets/images/bitcoin-3132717-1920.jpg\" alt=\"Blockchain Banner\"/></p>\n\n<p>Blockchain, one of the underlying technologies which has helped to drive the startling growth of cryptocurrencies, is already disrupting a huge spectrum of businesses, financial services and capital markets.</p>\n\n<p>Like no other technology, Blockchain is rapidly transforming the way we do business and transact, making the necessary data more immediately available, transparent and secure. Its influence has infiltrated every aspect of business and routine operations in the like of internal regulatory functions, regulatory compliance and regulatory filings etc.</p>\n\n<p>The real breakthrough with Blockchain is its ability to provide the basis for running truly distributed applications that eliminates the need for a central authority validation creating a true peer to peer economy.</p>\n\n<p>In following chapters we’ll start unwrapping the many layers of its technology and use cases.</p>\n\n <p><a href=\"https://sebastienrousseau.co.uk/blockchain-an-extraordinary-journey.html\" rel=\"nofollow\">Blockchain, the technology that matters in 2018</a> was originally published on Sebastien Rousseau.</p>", "content_text": "A story of the extraordinary journey of securing digital transactions through Private-key Cryptography and Peer-to-peer (P2P) networks. Blockchain, one of the underlying technologies which has helped to drive the startling growth of cryptocurrencies, is already disrupting a huge spectrum of businesses, financial services and capital markets. Like no other technology, Blockchain is rapidly transforming the way we do business and transact, making the necessary data more immediately available, transparent and secure. Its influence has infiltrated every aspect of business and routine operations in the like of internal regulatory functions, regulatory compliance and regulatory filings etc. The real breakthrough with Blockchain is its ability to provide the basis for running truly distributed applications that eliminates the need for a central authority validation creating a true peer to peer economy. In following chapters we’ll start unwrapping the many layers of its technology and use cases." , "summary": "A story of the extraordinary journey of securing digital transactions through Private-key Cryptography and Peer-to-peer (P2P) networks." , "tags": ["blockchain","cryptocurrencies","cryptography","financial-services","p2p"] , "date_published": "2018-01-02T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } }, { "id": "https://sebastienrousseau.co.uk/bitcoin-the-year-in-review", "url": "https://sebastienrousseau.co.uk/bitcoin-the-year-in-review.html", "title": "Bitcoin The Year In Review", "content_html": "<p><strong>The Peer-to-Peer Electronic Cash System that everyone is talking about.</strong></p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/bitcoin-2018-320.jpg 320w, assets/images/bitcoin-2018-480.jpg 480w, assets/images/bitcoin-2018-576.jpg 576w, assets/images/bitcoin-2018-640.jpg 640w, assets/images/bitcoin-2018-720.jpg 720w, assets/images/bitcoin-2018-768.jpg 768w, assets/images/bitcoin-2018-800.jpg 800w, assets/images/bitcoin-2018-960.jpg 960w, assets/images/bitcoin-2018-1024.jpg 1024w, assets/images/bitcoin-2018-1200.jpg 1200w, assets/images/bitcoin-2018-1280.jpg 1280w, assets/images/bitcoin-2018-1366.jpg 1366w,assets/images/bitcoin-2018-1440.jpg 1440w, assets/images/bitcoin-2018-1536.jpg 1536w, assets/images/bitcoin-2018-1600.jpg 1600w, assets/images/bitcoin-2018-1920.jpg 1920w\" src=\"assets/images/bitcoin-2018-1920.jpg\" alt=\"Bitcoin Banner\"/></p>\n\n<p>Cryptocurrencies- a term until recently reserved for specialists, have hit mainstream headlines all through 2017. And the cryptocurrency phenomenon on everyone’s lips is Bitcoin.</p>\n\n<p>2017 will go down as the biggest year in Bitcoin’s history where the digital currency had had the most incredible rise in value.</p>\n\n<p><img sizes=\"(max-width: 1920px) 100vw, 1920px\" srcset=\" assets/images/chart-320.jpg 320w, assets/images/chart-480.jpg 480w, assets/images/chart-576.jpg 576w, assets/images/chart-640.jpg 640w, assets/images/chart-720.jpg 720w, assets/images/chart-768.jpg 768w, assets/images/chart-800.jpg 800w, assets/images/chart-960.jpg 960w, assets/images/chart-1024.jpg 1024w, assets/images/chart-1200.jpg 1200w, assets/images/chart-1280.jpg 1280w, assets/images/chart-1366.jpg 1366w, assets/images/chart-1440.jpg 1440w, assets/images/chart-1536.jpg 1536w, assets/images/chart-1600.jpg 1600w, assets/images/chart-1920.jpg 1920w\" src=\"assets/images/chart-1920.jpg\" alt=\"Bitcoin (BTC) chart in 2017\"/></p>\n\n<p>In January 2017, Bitcoin was valued at 1000 USD. Spring forward to December 17 2017, Bitcoin was worth 20 times that amount at an eye-watering 20,089 USD.</p>\n\n<p>Investors are looking more seriously at Bitcoin and other cryptocurrencies as they become a more lucrative equity market.</p>\n\n<p>The innovative technology driving cryptocurrencies- blockchain- is a new foundational technology allowing the distribution of digital information. It has huge potential to be applied across a vast range of transactions.</p>\n\n<p>In this blog I’ll be digging into cryptocurrencies, exploring the immense potential of blockchain, and looking ahead to related trends.</p>\n\n <p><a href=\"https://sebastienrousseau.co.uk/bitcoin-the-year-in-review.html\" rel=\"nofollow\">Bitcoin The Year In Review</a> was originally published on Sebastien Rousseau.</p>", "content_text": "The Peer-to-Peer Electronic Cash System that everyone is talking about. Cryptocurrencies- a term until recently reserved for specialists, have hit mainstream headlines all through 2017. And the cryptocurrency phenomenon on everyone’s lips is Bitcoin. 2017 will go down as the biggest year in Bitcoin’s history where the digital currency had had the most incredible rise in value. In January 2017, Bitcoin was valued at 1000 USD. Spring forward to December 17 2017, Bitcoin was worth 20 times that amount at an eye-watering 20,089 USD. Investors are looking more seriously at Bitcoin and other cryptocurrencies as they become a more lucrative equity market. The innovative technology driving cryptocurrencies- blockchain- is a new foundational technology allowing the distribution of digital information. It has huge potential to be applied across a vast range of transactions. In this blog I’ll be digging into cryptocurrencies, exploring the immense potential of blockchain, and looking ahead to related trends." , "summary": "The Peer-to-Peer Electronic Cash System that everyone is talking about." , "tags": ["bitcoin","bitcoinnews","blockchain","btc","cryptocurrencies","cryptocurrency"] , "date_published": "2018-01-01T00:00:00+00:00" , "author": { "name": "Sebastien Rousseau" } } ] }